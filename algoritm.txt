классы:
MainClass - Основной класс, содержит pointers на Servers, собирает проект в целое
Logger - статик класс записывает логи в папку logs
ConfParser - статик класс. Парсит конфиг файл.
Servers - обычный класс. Содержит map <sockFd, class Server> обозначающий все коннекты.
Server  - обычный класс. содержит данные о хосте/порте/запрос/ответ/принадлежность к cgi
Stage - поле внутри класса Server, показывающий текущий статус обработки запроса.

Stage:
    0 - старт обработки
    1 - read
    2 - parse
    3 - handle
    4 - CGI
    5 - write
    9 - error
readStage:
    0 - новое чтение
    1 - читаем чанки
parseStage:
    0 - start
    1 - start string ready
    2 - headers ready
    3 - body full
    9 - error
CGIStage:
    0 - start
    1 - send to pipe PipeOutForward
    2 - last send to PipeOutForward
        20 - not all sent
    3 - fork + launch script
    4 - wait end of pid
    5 - read from PipeInBack
    6 - end of pipe reached
    9 - CGIerror
writeStage:
    0 - новая запись
    1 - досылаем чанк
    2 - шлем последний чанк


алгоритм:
1. Парсим конфиг файл, создаем слушающие фд для кождого хоста:порта записываем в Servers::map
    пары fd + объект класса Server. Для каждого сервера выделяем память 
    из кучи внутри Servers и чистим в деструкторе.
    Для каждого Server * создаем список t_serv отвечающий за конфиг сервера с именем.
    Для каждого листа в списке t_serv создаем список t_loc отвечающий за параметры location.

2. Запускаем mainloop
    2.0 чистим readset и writeset
    2.1 в зависимости от stage добавляем fd в readset/writeset
        2.1.1 идем по всем используемым подключениям проверяем stage
            2.1.1.1 stage 0/1 - добавляем fdKey в readset
                    stage 10/11/12 - добавляем fdKey в writeset
                    stage 20 - добавляем fdPipeOut в writeset
                    stage 23 - добавляем fdPipeIN в readset
            2.1.1.2 Считаем maxFd
        2.1.2 идем по всем слушающим fd и добавляем в readset, проверяем не нужно ли поменять maxFd
SELECT
    2.2 идем циклом по слушающим fd:
        2.2.1 если в readset - добавляем подключение + клонируем server
    2.3 идем циклом по используемым fd:
        2.3.1 если fdKey в readset:
            2.3.1.1 если resRecv == -1 проверяем stage:
                        // 0/1 Закрываем connection
            2.3.1.2 если resRecv == 0 проверяем stage:
                        // 0 - Закрываем connection
                        // 1 - Закрываем если таймаут
            2.3.1.3 если resRecv > 0 проверяем stage:
                        // 0 - читаем запрос дописываем к стринге запроса
                        // 1 - добавляем чанк к запросу, если чанк последний (==0) - переходим к обработке запроса
        2.3.2 если fdPipeIN в readset смотрим stage
                        // 22 - записываем ответ (// 22 - записываем в ответ ошибку 5XX/отдаем стандартную ошибку html)
        2.3.3 если fdKey в writeset:
            2.3.3.1 отправляем и проверяем результат
            2.3.3.2 <0 - close connection
            2.3.3.3 <len - ресайз ответа
            2.3.3.4 выствляем stage 1;
        2.3.4 если fdPipeOut в writeset смотрим stage, если есть что отправить - отправляем
        2.4 проверяем для всех используемых connection timeout и закрывают то что не обновлялось


